
This is the README for building the hybrid MPI/OpenMP or OpenMP-only parallelized versions of AutoDock 4.2 for the IBM BlueGene/P and POWER7 systems.  Automake is no longer used, what has been done instead is the target Makefile itself from running Automake has been saved and modified as Makefile.base.  A new main Makefile has been created to build the different versions of autodock by setting different variables on the command line on the call to make using the Makefile.base - you should modify those variables to match your environment and options - the DEFS and AM_CXXFLAGS variables are taken directly from the Makefile originally generated by Automake, the SELECTED_CCOMPILER and SELECTED_CPPCOMPILER variables set the name and location of the C and C++ compiler or mpiwrapper.  These are the executable names of the 3 tested versions:

autodock-bgp-omp-mpi --- This is the BGP hybrid-parallelization version using MPI and OpenMP.
autodock-bgp-omp-nompi --- This is the BGP OpenMP-only parallelization version for doing just 1 docking.
autodock-power7-omp-nompi --- This is the POWER7 OpenMP-only parallelization version for doing just 1 docking.

Static memory footprint:
The base autodock code utilizes static data extensively - for this openmp implementation there are 2 directives that significantly influence the amount of memory taken up by static storage:

MAX_MAPS
MAX_NUM_THREADS

The 'MAX_MAPS' is the number of grid maps that need to be loaded - the default is 32.  At this value the static memory footprint is quite large.  If you know that the number of total grid maps that will be used for all dockings is less than this, then you can explicity set this value by prepending it in the 'DEFS=' value in the make rule like this (eg you only have 12 grid maps):

-DMAX_MAPS=12

For example you can use the linux 'size' command from to determine the amount of static storage that will be used - for example with just 1 thread and the default 32 MAX_MAPS grid maps that value is over 300mb - if you cut the MAX_MAPS in half to 16 that value becomes about 168 mb - basically each grid map takes about 8.5mb of static storage.

The other factor in the static memory requirement is the maximum number of threads you will want to run with for each individual docking.  This is set by the 'MAX_NUM_THREADS' directive and the default is 16.  Each thread takes up about 0.75 mb of static storage data structures, so for 16 threads that is an additional ~12mb of static storage.

So if you build without changing any values you will allow for 32 grid maps and 16 concurrent threads, your total static data size will be ~313mb (there is also additional static data unrelated to MAX_MAPS and MAX_NUM_THREADS)


To build:

- uncompress the MPAutoDock.zip file into a single directory
- add/modify the MAX_MAPS and MAX_NUM_THREADS values in the make rules if necessary


then from this directory, for BlueGene/P:
make autodock-bgp-omp-mpi
make autodock-bgp-omp-nompi

for POWER7:
make autodock-power7-omp-nompi


Build notes:

For autodock-bgp-omp-nompi the DEFS variable includes this directive:

-DPERF_PROFILING=1

This will enable the performance profiling which consumes little overhead, this is detailed later in the README - simply remove it to turn this off.

For POWER7, only the AIX version is currently available, the LINUX version is blocked by an xlC v11.1 compiler defect.  

For POWER7 AIX, there is a compiler bug for which a workaround has been placed in the code, in the Makefile for the POWER7 rules you'll see this directive appended to the AM_CXXFLAGS:

-DWORKAROUND_ISSUE1465=1

A fix for this issue should be available sometime in January 2011 with the following APAR for the xlC v11.1 AIX version:

AIX APAR IZ85978

Until you apply that fix you'll need to keep the WORKAROUND_ISSUE1465 directive.

Running:

There are no options on the command line for setting the number of OpenMP threads to use, just use the OMP_NUM_THREADS environment variable to specify that.

The non-MPI versions are invoked exactly the same as the serial version, with the addition of a -r option for the seed type (if unspecified the default_seed is used):

-r <seed_type>

The seed_type accepted values are:
same_seed - Use a hard-coded seed value, useful only in doing performance measurements.
default_seed - Use the time of day plus the threadid for the seed.

For running on POWER7 the following additional environment variables were set to obtain the performance numbers in the paper - here is an example for 32 threads:

export OBJECT_MODE=64 
export XLSMPOPTS="startproc=0:stride=1:parthds=32" 
export MALLOCMULTIHEAP=heaps:32 

The hybrid MPI/OpenMP version for BlueGene/P is invoked with the following arguments in this precise order:

<docking_list_file> <docking_base_directory> <status_directory> <seed_type> <map_file_usage>

docking_list_file: file containing the list of ligands to be docked
docking_base_directory: base directory containing the ligand directories created with the python scripts for the virtual screening setup (eg. the 'Dockings' directory from the UsingAutoDock4forVirtualScreening_v4.pdf tutorial)
status_directory: directory containing the following status and performance logging files, updated in real time as each docking finishes:

submitted_dockings: a status line for each ligand with a timestamp of when it was sent to a slave
failed_dockings: a status line for each ligand with a timestamp of when returned from a slave with a failure rc
successful_dockings: a status line for each ligand with a timestamp of when returned from a slave with a successful rc
docking_performance.csv: a CSV file containing performance profiling information, the first line is  the column headers
stderrfile: stderr is redirected to this file - look here for additional error messages in the case of docking failures indicated in the 'failed_dockings' file.
stdoutfile: stdout is redirected to this file

seed_type: Indicator for the value used to seed the RNG, values must be:
same_seed - Use a hard-coded seed value, useful only in doing performance measurements.
default_seed - Use the time of day plus the threadid for the seed.
unique_node_seed - Use the time of day plus the threadid plus the mpi rank for the seed.

map_file_usage: Indicator for whether or not grid maps should persist in memory on the slave nodes - value must be either "reuse_maps" or "reload_maps".

Refer the the paper 'Multilevel Parallelization of AutoDock 4.2' for further information for these runtime options.
